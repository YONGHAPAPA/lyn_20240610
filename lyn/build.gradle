plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.lyn'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		/*window:java 17, mac:java21*/
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

configurations {
	/* spring boot logback 의존성 제거 Log4j2 사용하기 위함*/
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	
	/* JNDI */
	implementation 'org.postgresql:postgresql'
	implementation 'org.apache.commons:commons-dbcp2:2.12.0'
	
	
	/* log4j2 
	   (주의!)아래 log4jdbc-log4j2-jdbc4.1 와는 다른 lib 
	   log4j2 적용은  spring-boot-starter-log4j2 라이브러리 참조필요, 참조시 Log4j2.xml 추가설정 필요 
	*/	
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	
	/* log4j2 for query with params log */
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	
	/* Mybatis */
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	
	/* lombok */
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	
	/* security */
	implementation('org.springframework.boot:spring-boot-starter-security')
	
	
	/* JWT */
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.auth0:java-jwt:4.4.0'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}


//React 배포관련
def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install' }
	else {
		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}


